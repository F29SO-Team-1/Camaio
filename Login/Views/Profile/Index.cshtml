@using Microsoft.AspNetCore.Identity
@using Login.Areas.Identity.Data
@model Login.Models.ApplicationUser.ProfileModel
@inject SignInManager<LoginUser> SignInManager

@{
    ViewData["Title"] = "Profile Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid d-flex flex-lg-row flex-column">
    <div class="col-lg-2 col-md-12 mt-2">
        <ul class="nav flex-column w-100">
            <img class="img mx-auto" style="height:100px;width:100px;"src="@Model.ProfileImageUrl"></img>
            <p class="mt-2 text-center">
                Score:@Model.UserRating
            </p>
            </br>
            <p class=" text-center">
                Member since: @Model.MemmberSince
            </p>
            @foreach (var role in @Model.Roles.Result){
                <p>@role</p> <br/>
            }
            @if (SignInManager.IsSignedIn(User)){
                <a class="nav-item p-2 mt-2" id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Settings</a>
            }
            <Button class="nav-item btn text-left p-2" onClick="drawDiv(toggleDIV1)">Followers</Button>
            <Button class="nav-item btn text-left p-2" onClick="drawDiv(toggleDIV2)">Following</Button>
            <Button class="nav-item btn text-left p-2" onClick="drawDiv(toggleDIV3)">Likes</Button>
        </ul>
    </div>

    <div class="col-lg-10 col-md-12 mt-2">
        <div class="row w-100 border border-success" id="toggleDIV1">
            @try{
                @foreach (var followed in Model.FollowsUser){
                    <a class="nav-item" asp-controller="Profile" asp-route-username="@followed.Id">
                        @followed.Username
                    </a>
                }
            }
            catch(Exception){
                <p>Not following anyone</p>
            }
        </div>
        <div class="row w-100 border border-success" id="toggleDIV2">
            @try{
                @foreach (var followers in Model.UsersFollowed){
                    @followers.Username
                }
            }
            catch(Exception){
                <p>No followers</p>
            }
        </div>
        <div class="row w-100 border border-success" id="toggleDIV3">
            @try{
                @foreach (var liked in Model.Likes){
                    
                }
            }
            catch(Exception){
                <p>No likes</p>
            }
        </div>


        <div class="d-flex flex-wrap flex-row container-fluid rel">
            <div class="col-md-3 col-sm-6 p-0 m-0" id="column-one">
            </div>
            <div class="col-md-3 col-sm-6 p-0 m-0" id="column-two">
            </div>
            <div class="col-md-3 col-sm-6 p-0 m-0" id="column-three">
            </div>
            <div class="col-md-3 col-sm-6 p-0 m-0" id="column-four">
            </div>
        </div>

        <div class="row">
            @foreach (var thread in @Model.Threads)
            {
                <div class="m-1 rel">
                    <a asp-action="Index" asp-controller="Thread" asp-route-id="@thread.Id">
                        <img class="picture profile rounded" src="@thread.Picture" alt="Image"/>
                    </a>
                </div>
            }
        </div>

        
    </div>
    
        

</div>