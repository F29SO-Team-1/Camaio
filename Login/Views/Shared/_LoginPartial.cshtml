@using Microsoft.AspNetCore.Identity
@using Login.Areas.Identity.Data

@inject SignInManager<LoginUser> SignInManager
@inject UserManager<LoginUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="btn-group">
            <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @UserManager.GetUserName(User)
            </button>
            <div class="dropdown-menu">
                <a class="dropdown-item" id="manage"  asp-area="" asp-controller="Profile" asp-action="Detail" asp-route-username="@UserManager.GetUserName(User)">Account</a>
                <a class="dropdown-item" id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Settings</a>
                <div class="dropdown-divider"></div>
                <form id="logoutForm" class="dropdown-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </div>
            </div>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
